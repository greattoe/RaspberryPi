■ Use Serial Console on Pi3 ==================================

pi@raspberrypi:~ $ sudo nano /boot/config.txt
--------------------------------------------------------------
# for using serial console
enable_uart=1
dtoverlay=pi3-miniuart-bt
--------------------------------------------------------------


■ Rotate Display ==================================
pi@raspberrypi:~ $ sudo nano /boot/config.txt
--------------------------------------------------------------
# display rotation
 n=0,1,2,3 1:90, 2:180, 3:270
display_rotate=n
--------------------------------------------------------------


■ connect AP manually ========================================

pi@raspberrypi:~ $ sudo nano /etc/wpa_supplicant/wpa_supplicant.conf
--------------------------------------------------------------
country=GB
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1

network={
        ssid="iot_project"
        psk="raspberry"
        key_mgmt=WPA-PSK
}

network={
        ssid="KCCI_STC_S"
        psk="kcci098#"
        key_mgmt=WPA-PSK
}
--------------------------------------------------------------

■ how to configure wireless networking in CLI

sudo wpa_passphrase [ssid] [password] > /home/pi/wpa_psk.conf

sudo wpa_supplicant -B -iwlan0 -c/home/pi/wpa_psk.conf -Dwext
sudo dhclient wlan0


■ how to configure static network ( raspbian-stretch with GUI )

pi@raspberrypi:~ $ sudo nano /etc/dhcpcd.conf

add bellow
--------------------------------------------------------------
SSID iot_project
inform 192.168.91.99
--------------------------------------------------------------

■ Time Synchronize with NTP ==================================

시스템 시간 동기문제로 인한 node.js 설치 에러 발생할 경우

pi@raspberrypi:~ $ sudo apt-get install rdate
pi@raspberrypi:~ $ sudo rdate -s time.bora.net


■ wiringPi Library ============================================

pi@raspberrypi:~ $ git clone git://git.drogon.net/wiringPi
pi@raspberrypi:~ $ cd wiringPi
pi@raspberry:~/wiringPi $ ./build
pi@raspberry:~/wiringPi $ cd


■ xrdp ========================================================

raspbian-jessie 의 경우 realvnc-vnc-server를 삭제
pi@raspberrypi:~ $ sudo apt-get purge realvnc-vnc-server

pi@raspberrypi:~ $ sudo apt-get install xrdp

Windows Key + R ,  mstsc 
Connect Remote Desktop 
ID : pi, Password : raspberry


■ node.js ================================================
pi@raspberrypi:~ $ curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
pi@raspberrypi:~ $ sudo apt-get install nodejs -y
pi@raspberrypi:~ $ node -v
pi@raspberrypi:~ $ npm -v

■ Express.js =============================================
pi@raspberrypi:~ $ sudo npm install -g express
pi@raspberrypi:~ $ sudo npm install -g express-generator

■ serialport =============================================
pi@raspberrypi:~ $ sudo npm install serialport --unsafe-perm --build-from-source


■ Console을 통한 remote access ============================
pi@raspberrypi:~ $ ssh pi@192.168.x.x
pi@raspberrypi:~ $ sftp pi@192.168.x.x
pi@raspberrypi:~ $ telnet pi@192.168.x.x
pi@raspberrypi:~ $ ftp pi@192.168.x.x
- ssh server demon은 기본 설치가 되어있어 사용가능.
- telnet, ftp는 각 server demon을 설치한 후에 사용가능.
- sftp에서 사용하는 명령: get, put, mget, mput 등.


■ minicom =================================================
pi@raspberrypi:~ $ sudo apt-get install minicom

pi@raspberrypi:~ $ sudo minicom
minicom: cannot open /dev/modem: No such file or directory

pi@raspberrypi:~ $ su
Password:

root@raspberrypi:/home/pi# ln -s /dev/ttyAMA0 /dev/modem
root@raspberrypi:/home/pi# exit

pi@raspberrypi:~ $ sudo minicom


■ mjpg streamer  ==========================================
pi@raspberrypi:~ $ sudo apt-get install git cmake libjpeg8-dev imagemagick -y
pi@raspberrypi:~ $ sudo ln -s /usr/include/linux/videodev2.h /usr/include/linux/videodev.h
pi@raspberrypi:~ $ git clone https://github.com/jacksonliam/mjpg-streamer
pi@raspberrypi:~ $ cd ~/mjpg-streamer/mjpg-streamer-experimental
pi@raspberrypi:~/mjpg-streamer/mjpg-streamer-experimental/ $ make
pi@raspberrypi:~/mjpg-streamer/mjpg-streamer-experimental/ $ sudo make install
pi@raspberrypi:~/mjpg-streamer/mjpg-streamer-experimental/ $ cd ~
pi@raspberrypi:~ $ nano mjpg.sh
------------------------------------------------------------
#!/bin/sh -e
cd /home/pi/mjpg-streamer/mjpg-streamer-experimental/
./mjpg_streamer -o "output_http.so -w ./www" -i "input_raspicam.so"
------------------------------------------------------------
pi@raspberrypi:~ $ sh ./mjpg.sh

■ MBOX 설치  (.h264 -> .mp4) ===============================
pi@raspberrypi:~ $ sudo apt-get install ffmpeg

■ ffmpeg codec 설치  (.h264 -> .mkv) ===============================
pi@raspberrypi:~ $ sudo apt-get install ffmpeg

■ ffmpeg 을 이용한 파일 포멧 변환  (/home/pi/Desktop/movieClip01.h264 -> /home/pi/movieClip01.mkv)
pi@raspberrypi:~ $ ffmpeg -r 30 -i ./Desktop/movieClip01.h264 -vcodec copy ./movieClip01.mkv

■ omxplayer를 이용한 동영상(/home/pi/movieClip01.mkv) 재생 ===============
pi@raspberrypi:~ $ omxplayer -p -o hdmi ./movieClip01.mkv

■ gomx 설치  ===============================================


■ 동영상 재생 테스트  ====================================

* mplayer 설치
pi@raspberrypi:~ $ sudo apt-get update
pi@raspberrypi:~ $ sudo apt-get install mplayer

* 테스트 동영상 다운로드 및 재생
pi@raspberrypi:~ $ wget http://adafruit-download.s3.amazonaws.com/bigbuckbunny320p.mp4
pi@raspberrypi:~ $ mplayer -vo fbdev2:/dev/fb1 -x 240 -y 320 -framedrop bigbuckbunny320p.mp4

■ MySQL ==================================================

### install
pi@raspberrypi:~ $ sudo apt-get install mysql-server mysql-client -y

### excute mysql & make user, database, table
pi@raspberrypi:~ $ sudo mysql -u root -p
Enter password:
MariaDB [(none)]> show databases;
MariaDB [(none)]> use mysql;
MariaDB [mysql]> show tables;
MariaDB [mysql]> desc user;
MariaDB [mysql]> select host, user, password from user;
MariaDB [mysql]> insert into user(host,user,password) values('localhost','pi',password('pi'));
MariaDB [mysql]> select host, user, password from user;
MariaDB [mysql]> desc db;
MariaDB [mysql]> create database dht22;
MariaDB [mysql]> show databases;
MariaDB [mysql]> insert into db values('localhost','dht22','pi','y','y','y','y','y','y','y','y','y','y','y','y','y','y','y','y','y','y','y');
MariaDB [mysql]> select host, user, password from user;
MariaDB [mysql]> flush privileges;
MariaDB [mysql]> use dht22
MariaDB [dht22]> create table location01(id int not null auto_increment primary key,name varchar(50) not null,modelnumber varchar(15) not null,series varchar(30) not null,time timestamp default CURRENT_TIMESTAMP);
MariaDB [dht22]> create table dev01(id int not null auto_increment primary key,Temperature varchar(10) not null,Humidity varchar(10) not null,time timestamp default CURRENT_TIMESTAMP);
MariaDB [dht22]> show tables
MariaDB [dht22]> quit

### relrease local bind
pi@raspberrypi:~ $ sudo nano /etc/mysql/mariadb.conf.d/50-server.cnf
------------------------------------------------------------
bind-address = 127.0.0.1 # insert '#' like bellow line
# bind-address = 127.0.0.1
------------------------------------------------------------

### grant all privileges(access from network) db'exDB' user'pi' ip'192.168.91.xxx' password 'pi'
MariaDB [mysql]> grant all privileges on exDB.* to 'pi'@'192.168.91.xxx' identified by 'pi';
MariaDB [mysql]> grant all privileges on dht22.* to 'pi'@'10.0.137.106' identified by 'pi';
MariaDB [mysql]> flush privileges;

### change password
MariaDB [mysql]> update user set password=password('password') where user='root';
MariaDB [mysql]> flush privileges;


■ samba ==================================================
pi@raspberrypi:~ $ sudo apt-get install samba samba-common-bin
pi@raspberrypi:~ $ sudo smbpasswd -a [username]
pi@raspberrypi:~ $ set environment ( access account of samba server )
pi@raspberrypi:~ $ sudo nano /etc/samba/smb.conf  하단에 아래 추가
-----------------------------------------------------------	
[global]
workgroup = WORKGROUP
encrypt passwords = true
unix charset = utf-8
charset = utf-8
	
[pi]
comment = pi/samba
path = /home/pi
read only = no
writable = yes
printable = no
public = yes
browsable = yes
guest ok =no
-----------------------------------------------------------
* add account( 계정 추가 )
pi@raspberrypi:~ $ sudo adduser 계정 아이디
pi@raspberrypi:~ $ add samba account
pi@raspberrypi:~ $ sudo smbpasswd -a 계정 아이디
* restart samba server
pi@raspberrypi:~ $ sudo /etc/init.d/smbd restart

■ 한글 폰트 ===============================================
pi@raspberrypi:~ $ sudo apt-get install fonts-unfonts-core

■ 한글 입력기 =============================================
pi@raspberrypi:~ $ sudo apt-get install ibus-hangul


■ 나눔고딕코딩 폰트 설치 ===================================
https://github.com/naver/nanumfont/releases/download/VER2.5/NanumGothicCoding-2.5.zip
1. 웹브라우져에서 위 경로 입력하면 /home/pi/Downloads 경로에 다운로드 됨
2. 파일매니져에서 해당 파일을 더블클릭하여 Extract here 를 선택하여 압축해제
3. 터미널을 열어 *.ttf 파일을 시스템 폰트 디렉토리에 복사.

pi@raspberrypi:~ $ cd Downloads
pi@raspberrypi:~/Downloads $ sudo cp *.ttf /usr/share/fonts
pi@raspberrypi:~/Downloads $ sudo reboot


sudo nano /etc/fonts/conf.d/29-language-selector-ko-kr.conf
------------------------------------------------------------
 64         <test name="pixelsize" compare="less">
 65                 <int>22</int>
 66         </test>
 67         <edit name="antialias" mode="assign">
 68                 <bool>false</bool>
 69         </edit>
 70         <edit name="autohint" mode="assign">
 71                 <bool>false</bool>
------------------------------------------------------------

■ Network 고정 IP 설정 (raspbian wheezy)
pi@raspberrypi:~ $ sudo nano /etc/network/interfaces

# lo --------------------------------------------------
auto lo
iface lo inet loopback
# eth0 ------------------------------------------------
# iface eth0 inet dhcp // default setting
# user setting 4 eth0 2 use static IP - below 4 lines
iface eth0 inet static
    address 192.168.0.191
    netmask 255.255.255.0
    gateway 192.168.0.1
# wlan0 -----------------------------------------------
allow hot-plug wlan0
iface wlan0 inet manual
wpa-roam /etc/wpa-supplicant/wpa-supplicant.conf
# iface wlan0 inet dhcp // default setting
# user setting 4 wlan0 2 use static IP - below 4 lines
#iface wlan0 inet static
#    address 192.168.0.91
#    netmask 255.255.255.0
#    gateway 192.168.0.1
#    wpa-essid "router4pi"
#    wpa-psk "raspberry"
# End ------------------------------------------------

■ configuration for static ip /etc/dhcpcd.conf  ================
# case of connecting SSID 'Router4Pi'
SSID Router4Pi
# ip address
inform 172.16.91.63
# gateway
static routers=172.16.91.1
# DNS
static domain_name_servers=168.126.63.1

■ dd backup  =========================================

sudo apt-get install gparted
( adjust partion size by using gparted )

pi@raspberrypi:~ $ df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/root       3.9G  3.2G  531M  86% /
devtmpfs        459M     0  459M   0% /dev
tmpfs           463M     0  463M   0% /dev/shm
tmpfs           463M  6.3M  457M   2% /run
tmpfs           5.0M  4.0K  5.0M   1% /run/lock
tmpfs           463M     0  463M   0% /sys/fs/cgroup
/dev/mmcblk0p1   63M   21M   42M  33% /boot
tmpfs            93M     0   93M   0% /run/user/1000
/dev/sda1        15G  3.8G   12G  25% /media/pi/NTFS16G ( backup file 저장할 usb 메모리의 마운트 상태 확인 )
pi@raspberrypi:~ $ sudo fdisk -l /dev/mmcblk0

Disk /dev/mmcblk0: 14.9 GiB, 16021192704 bytes, 31291392 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x306554ac

Device         Boot  Start     End Sectors Size Id Type
/dev/mmcblk0p1        8192  137215  129024  63M  c W95 FAT32 (LBA)
/dev/mmcblk0p2      137216 8001535 7864320   4G 83 Linux ( End = 8001535 까지 backup )

백업
pi@raspberrypi:~ $ sudo dd if=/dev/mmcblk0 of=/media/pi/NTFS16G/2017-03-21-raspbian-jessie-all.img bs=512 count=8001535

복구
pi@raspberrypi:~ $ sudo dd if=/media/pi/NTFS16G/2017-03-21-raspbian-jessie-all.img of=/dev/sdb

fat32를 ntfs로 변환하기
convert [드라이브]: /fs:ntfs

[ /media/pi/NTFS16G ]는 dd로 backup한 백업파일 저장을 위해 미리 USB포트에 연결해 둔 USB메모리이다. 백업이미지 파일 크기가 4GB가 넘으면 fat32 장치에
기록할 수 없기 때문에 미리 ntfs로 변환해 두었다.

그럼에도 불구하고, 이 USB메모리가 읽기전용으로 마운트 되어, 기록 불가능하다는 에러가 날 경우에는...

step1. [ntfs-3g] 설치 ----- sudo apt-get install ntfs-3g

step2. USB 메모리 안전제거

step3. USB 메모리 재연결 후, 재시도.


■ install virtual KB when using touch-screen ======

step1. install & reboot
  sudo apt-get install matchbox-keyboard
  sudo reboot

step2. make apear on menu
 - start button - preference - main menu editor
 - uncheck accessories - keyboard and click 'OK'
 - and repeat the process. but check this time. and click 'OK"

step3. run matchbox-keyboard
 - start button - accessories - keyboard
 

■ raspbian jessie old image download ==============

http://downloads.raspberrypi.org/raspbian/images/

http://downloads.raspberrypi.org/raspbian_lite/images/



■ raspbian wheezy old image download ==============

http://downloads.raspberrypi.org/raspbian/images/

https://downloads.raspberrypi.org/raspb ... 015-05-07/



■ python 소스파일을 실행파일로  =========================
소스코드 첫 행에 shebang( #!/usr/bin/python ) 삽입.
* 셔뱅 - 유닉스 OS 상에서 스크립트 파일을 실행할 인터프리터 프로그램을 지정해 주는 것.

